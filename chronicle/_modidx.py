# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/py-chronicle',
                'doc_host': 'https://andrie.github.io',
                'git_url': 'https://github.com/andrie/py-chronicle',
                'lib_path': 'chronicle'},
  'syms': { 'chronicle.core': { 'chronicle.core.ChronicleLogs': ('core.html#chroniclelogs', 'chronicle/core.py'),
                                'chronicle.core.ChronicleLogs.__init__': ('core.html#chroniclelogs.__init__', 'chronicle/core.py'),
                                'chronicle.core.ChronicleLogs.connect_logins': ( 'core.html#chroniclelogs.connect_logins',
                                                                                 'chronicle/core.py'),
                                'chronicle.core.ChronicleLogs.extract_connect_audit_logs': ( 'core.html#chroniclelogs.extract_connect_audit_logs',
                                                                                             'chronicle/core.py'),
                                'chronicle.core.ChronicleLogs.extract_workbench_audit_cols': ( 'core.html#chroniclelogs.extract_workbench_audit_cols',
                                                                                               'chronicle/core.py'),
                                'chronicle.core.ChronicleLogs.extract_workbench_audit_logs': ( 'core.html#chroniclelogs.extract_workbench_audit_logs',
                                                                                               'chronicle/core.py'),
                                'chronicle.core.ChronicleLogs.filter_type': ('core.html#chroniclelogs.filter_type', 'chronicle/core.py'),
                                'chronicle.core.ChronicleLogs.unique_connect_actions': ( 'core.html#chroniclelogs.unique_connect_actions',
                                                                                         'chronicle/core.py'),
                                'chronicle.core.ChronicleLogs.unique_workbench_types': ( 'core.html#chroniclelogs.unique_workbench_types',
                                                                                         'chronicle/core.py'),
                                'chronicle.core.ChronicleLogs.workbench_logins': ( 'core.html#chroniclelogs.workbench_logins',
                                                                                   'chronicle/core.py'),
                                'chronicle.core.ChronicleMetrics': ('core.html#chroniclemetrics', 'chronicle/core.py'),
                                'chronicle.core.ChronicleMetrics.__init__': ('core.html#chroniclemetrics.__init__', 'chronicle/core.py'),
                                'chronicle.core.ChronicleMetrics.describe': ('core.html#chroniclemetrics.describe', 'chronicle/core.py'),
                                'chronicle.core.ChronicleMetrics.filter': ('core.html#chroniclemetrics.filter', 'chronicle/core.py'),
                                'chronicle.core.read_chronicle': ('core.html#read_chronicle', 'chronicle/core.py'),
                                'chronicle.core.read_chronicle_logs': ('core.html#read_chronicle_logs', 'chronicle/core.py'),
                                'chronicle.core.read_chronicle_metrics': ('core.html#read_chronicle_metrics', 'chronicle/core.py'),
                                'chronicle.core.scan_chronicle': ('core.html#scan_chronicle', 'chronicle/core.py'),
                                'chronicle.core.scan_chronicle_logs': ('core.html#scan_chronicle_logs', 'chronicle/core.py'),
                                'chronicle.core.scan_chronicle_metrics': ('core.html#scan_chronicle_metrics', 'chronicle/core.py')},
            'chronicle.io': { 'chronicle.io.get_s3_bucket_dates': ('io.html#get_s3_bucket_dates', 'chronicle/io.py'),
                              'chronicle.io.write_parquet': ('io.html#write_parquet', 'chronicle/io.py')},
            'chronicle.plot': {'chronicle.plot.ChronicleMetrics.plot': ('plot.html#chroniclemetrics.plot', 'chronicle/plot.py')}}}
